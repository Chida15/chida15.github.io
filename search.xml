<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>韩顺平java视频学习day6</title>
      <link href="/2024/04/22/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day6/"/>
      <url>/2024/04/22/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day6/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象编程（基础）"><a href="#面向对象编程（基础）" class="headerlink" title="面向对象编程（基础）"></a>面向对象编程（基础）</h1><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><h3 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h3><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">String name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法调用机制"><a href="#方法调用机制" class="headerlink" title="方法调用机制"></a>方法调用机制</h4><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day6/image-20240422095656528.png" alt="image-20240422095656528"></p><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：当程序执行到方法时，会开辟一个独立空间（栈空间）</p><h4 id="使用细节"><a href="#使用细节" class="headerlink" title="使用细节"></a>使用细节</h4><p>（1）方法可以用数组&#x2F;对象返回多个结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用数组返回多个同类型的结果</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arfs)</span> &#123;</span><br><span class="line"><span class="type">AA</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line"><span class="type">int</span>[] res = a.getSumAndSub(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">System.out.println(res[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + res[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] getSumAndSub(<span class="type">int</span> x, <span class="type">int</span> y) &#123;</span><br><span class="line"><span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">res[<span class="number">0</span>] = x + y;</span><br><span class="line">res[<span class="number">1</span>] = x - y;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用对象返回多个不同类型的结果</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arfs)</span> &#123;</span><br><span class="line"><span class="type">AA</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AA</span>();</span><br><span class="line"><span class="type">Object</span> <span class="variable">res</span> <span class="operator">=</span> a.getSumAndAvg(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">System.out.println(res.sum + <span class="string">&quot; &quot;</span> + res.avgSum + <span class="string">&quot; &quot;</span> + res.size);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Object</span> &#123;</span><br><span class="line"><span class="type">double</span> sum;</span><br><span class="line"><span class="type">double</span> avgSum;</span><br><span class="line"><span class="type">int</span> size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AA</span> &#123;</span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">getSumAndAvg</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y)</span> &#123;</span><br><span class="line"><span class="type">Object</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">res.sum = x + y;</span><br><span class="line">res.size = <span class="number">2</span>;</span><br><span class="line">res.avgSum = res.sum / res.size;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）方法的调用：同一个类的方法可以直接调用；</p>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩顺平java视频学习day5</title>
      <link href="/2024/04/21/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/"/>
      <url>/2024/04/21/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/</url>
      
        <content type="html"><![CDATA[<h1 id="程序控制结构"><a href="#程序控制结构" class="headerlink" title="程序控制结构"></a>程序控制结构</h1><h2 id="跳转控制语句"><a href="#跳转控制语句" class="headerlink" title="跳转控制语句"></a>跳转控制语句</h2><p>break、continue、return</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>（1）String用equals方法进行比较</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;林黛玉&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;林黛玉&quot;</span>.equals(name)); <span class="comment">// 具体的字符串写前面可以避免空指针异常</span></span><br></pre></td></tr></table></figure><p>（2）随机数生成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">100</span>) + <span class="number">1</span>; <span class="comment">// 生成1-100的随机整数</span></span><br></pre></td></tr></table></figure><h1 id="数组、排序和查找"><a href="#数组、排序和查找" class="headerlink" title="数组、排序和查找"></a>数组、排序和查找</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arfs)</span> &#123;</span><br><span class="line"><span class="type">double</span>[] hens = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3.4</span>, <span class="number">2</span>, <span class="number">50</span>&#125;;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 数组长度hens.length</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i &lt; hens.length; i++)&#123;</span><br><span class="line">sum += hens[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(sum + <span class="string">&quot; &quot;</span> + sum / hens.length);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组的使用"><a href="#数组的使用" class="headerlink" title="数组的使用"></a>数组的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>]; <span class="comment">// 动态初始化</span></span><br><span class="line"><span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] a;</span><br><span class="line">a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span>[] a = &#123;<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;; <span class="comment">// 静态初始化</span></span><br><span class="line"><span class="comment">// 数组的默认值：int/short/byte/long:0，float/double:0.0，char:\u0000,boolean:false, String:null</span></span><br></pre></td></tr></table></figure><h3 id="数组赋值机制"><a href="#数组赋值机制" class="headerlink" title="数组赋值机制"></a>数组赋值机制</h3><p>（1）基本数据类型赋值方式为值传递&#x2F;值拷贝，数组默认下赋值方式为引用传递，赋的值是地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">10</span>, n2 = n1;</span><br><span class="line">n2 = <span class="number">80</span>; <span class="comment">// n1不变</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, arr2 = arr1;</span><br><span class="line">arr2[<span class="number">0</span>] = <span class="number">10</span>; <span class="comment">// arr1[0] = 10</span></span><br></pre></td></tr></table></figure><p>（2）值传递和引用传递的区别</p><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/image-20240421152738593.png" alt="image-20240421152738593"></p><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：jvm的内存空间中，栈主要用于存储方法调用信息和局部变量，堆主要用于存储对象（自定义对象或数组等），方法区主要存放类加载信息。</p><p>在JDK6.0及之前版本，字符串常量池是放在方法区中； 在JDK7.0版本，字符串常量池被移到了堆中</p><p>（3）数组拷贝&#x2F;内容拷贝：数据空间独立</p><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/image-20240421153431065.png" alt="image-20240421153431065"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr1 = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[arr1.length];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr2.length; i++)&#123;</span><br><span class="line">  arr2[i] = arr1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组扩容"><a href="#数组扩容" class="headerlink" title="数组扩容"></a>数组扩容</h3><p>创建一个新的更大容量数组，存放原先数组</p><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><h4 id="二维数组快速入门"><a href="#二维数组快速入门" class="headerlink" title="二维数组快速入门"></a>二维数组快速入门</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arfs)</span> &#123;</span><br><span class="line"><span class="type">int</span>[][] arr = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;, </span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>,&#125;, </span><br><span class="line">&#123;<span class="number">7</span>, <span class="number">8</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++)&#123;</span><br><span class="line">System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二维数组的使用"><a href="#二维数组的使用" class="headerlink" title="二维数组的使用"></a>二维数组的使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">3</span>]; <span class="comment">// 动态初始化</span></span><br><span class="line"><span class="type">int</span>[][] a = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;, </span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>,&#125;, </span><br><span class="line">&#123;<span class="number">7</span>, <span class="number">8</span>&#125;&#125;; <span class="comment">// 静态初始化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][]; <span class="comment">// 动态初始化，列数不确定</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">  arr[i] = <span class="keyword">new</span> <span class="title class_">int</span>[i + <span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">    arr[i][j] = i + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span><br><span class="line">    System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二维数组内存布局"><a href="#二维数组内存布局" class="headerlink" title="二维数组内存布局"></a>二维数组内存布局</h4><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/image-20240421165705757.png" alt="image-20240421165705757"></p><h3 id="C-与Java在数组变量声明上的区别"><a href="#C-与Java在数组变量声明上的区别" class="headerlink" title="C++与Java在数组变量声明上的区别"></a>C++与Java在数组变量声明上的区别</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x[<span class="number">3</span>], y; <span class="comment">// C++中y是整型</span></span><br><span class="line"><span class="type">int</span>[] x, y; <span class="comment">// Java中y是一维数组</span></span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在有序数组中插入一个数仍保持其有序</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arfs)</span> &#123;</span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">12</span>, <span class="number">45</span>, <span class="number">90</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="variable">insertNum</span> <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (insertNum &lt; arr[i]) &#123;</span><br><span class="line">index = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">newArr[i] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (index == -<span class="number">1</span>) index = arr.length;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>; i &lt; newArr.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i != index) &#123;</span><br><span class="line">newArr[i] = arr[j++];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">newArr[i] = insertNum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr = newArr;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="面向对象编程（基础）"><a href="#面向对象编程（基础）" class="headerlink" title="面向对象编程（基础）"></a>面向对象编程（基础）</h1><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><h3 id="快速入门-1"><a href="#快速入门-1" class="headerlink" title="快速入门"></a>快速入门</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arfs)</span> &#123;</span><br><span class="line">    <span class="comment">// new Cat()创建的对象空间（数据）才是真正的对象，cat1是对象名（对象引用）</span></span><br><span class="line"><span class="type">Cat</span> <span class="variable">cat1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">cat1.name = <span class="string">&quot;xiaohua&quot;</span>;</span><br><span class="line">cat1.color = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">cat1.age = <span class="number">2</span>;</span><br><span class="line">System.out.println(cat1.name + <span class="string">&quot; &quot;</span> + cat1.color + <span class="string">&quot; &quot;</span> + cat1.age);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> &#123;</span><br><span class="line">String name, color;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象内存布局"><a href="#对象内存布局" class="headerlink" title="对象内存布局"></a>对象内存布局</h3><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/image-20240421210144140.png" alt="image-20240421210144140"></p><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day5/image-20240421212547291.png" alt="image-20240421212547291"></p><h4 id="创建对象的流程分析"><a href="#创建对象的流程分析" class="headerlink" title="创建对象的流程分析"></a>创建对象的流程分析</h4><p>（1）加载Cat类信息（属性信息，方法信息，只会加载一次）</p><p>（2）在堆中分配空间（对象），进行默认初始化</p><p>（3）把地址赋给cat，cat就指向对象</p><p>（3）进行指定初始化</p><h3 id="属性-成员变量-field（字段）"><a href="#属性-成员变量-field（字段）" class="headerlink" title="属性&#x2F;成员变量&#x2F;field（字段）"></a>属性&#x2F;成员变量&#x2F;field（字段）</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>（1）属性的定义语法同变量，示例：访问修饰符 属性类型 属性名;</p><p>访问修饰符用于控制属性的访问范围，分为默认、public、private、protected</p><p>（2）属性如果不赋值，默认值同数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="type">int</span> age; <span class="comment">// 默认值为0</span></span><br><span class="line">String name; <span class="comment">// 默认值为null</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">double</span> sal; <span class="comment">// 默认值为0。0</span></span><br><span class="line"><span class="type">boolean</span> ; <span class="comment">// 默认值为false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩顺平java视频学习day4</title>
      <link href="/2024/04/20/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day4/"/>
      <url>/2024/04/20/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day4/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><h3 id="和-的区别"><a href="#和-的区别" class="headerlink" title="&amp;&amp;和&amp;的区别"></a>&amp;&amp;和&amp;的区别</h3><p>（1）&amp;&amp;短路与：如果第一个条件为false，后面不会再判断</p><p>（2）&amp;逻辑与：如果第一个条件为false，后面仍会判断</p><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：Java中不能用0或1表示false或true，这和C++中不一样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">myScanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入年份：&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> myScanner.nextInt();</span><br><span class="line">    <span class="comment">// 如果是if (year % 4 == 0 &amp;&amp; year % 100  || year % 400 == 0)则错误，因为year % 100答案为0或1是int型不是boolean型</span></span><br><span class="line"><span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;是闰年！&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;是平年！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">b += <span class="number">2</span>; <span class="comment">// 等价 b = (byte)(b + 2);</span></span><br><span class="line"><span class="comment">// b = b + 2则错误，因为int不能转为byte</span></span><br><span class="line">b++; <span class="comment">// 等价 b = (byte)(b + 1);</span></span><br></pre></td></tr></table></figure><h2 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">// 导入java.util包下的Scanner类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">// 创建Scanner对象</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">myScanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入名字:&quot;</span>);</span><br><span class="line"><span class="comment">// 接收用户输入</span></span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> myScanner.next();</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入性别:&quot;</span>);</span><br><span class="line">    <span class="type">char</span> <span class="variable">gender</span> <span class="operator">=</span> myScanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入年龄:&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> myScanner.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入薪水:&quot;</span>);</span><br><span class="line"><span class="type">double</span> <span class="variable">salary</span> <span class="operator">=</span> myScanner.nextDouble();</span><br><span class="line">System.out.println(<span class="string">&quot;名字\t性别\t年龄\t薪水\n&quot;</span></span><br><span class="line">+ name + <span class="string">&#x27;\t&#x27;</span> + gender + <span class="string">&#x27;\t&#x27;</span> + age + <span class="string">&#x27;\t&#x27;</span> + salary);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day4/image-20240420144128196.png" alt="image-20240420144128196"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> -<span class="number">10.5</span> % <span class="number">3</span>; <span class="comment">// 结果为-1.5</span></span><br></pre></td></tr></table></figure><h1 id="程序控制结构"><a href="#程序控制结构" class="headerlink" title="程序控制结构"></a>程序控制结构</h1><h2 id="分支控制"><a href="#分支控制" class="headerlink" title="分支控制"></a>分支控制</h2><h3 id="if-else"><a href="#if-else" class="headerlink" title="if-else"></a>if-else</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (b = <span class="literal">false</span>) <span class="comment">// 不执行if语句，b变成false</span></span><br><span class="line">System.out.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b)</span><br><span class="line">  System.out.println(<span class="string">&quot;b&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!b)</span><br><span class="line">  System.out.println(<span class="string">&quot;c&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  System.out.println(<span class="string">&quot;d&quot;</span>);</span><br><span class="line"><span class="comment">// 输出c</span></span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day4/image-20240420163342350.png" alt="image-20240420163342350"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打印月份所属季节</span></span><br><span class="line"><span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">switch</span> (month) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;春天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;夏天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;秋天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>, <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;冬天&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;错误月份&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用穿透</span></span><br><span class="line"><span class="keyword">switch</span> (month) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;春天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;夏天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;秋天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;冬天&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;错误月份&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：</p><p>（1）表达式的数据类型和case后的常量类型一致，或可以自动转换相互比较，比如输入的是字符而常量是int</p><p>（2）表达式的返回值必须为byte、short、int、char、enum、String</p><p>（3）如果判断的具体数值不多，且符合表达式返回值类型，则用switch；如果对区间或结果为boolean型判断，则用if-else</p><h2 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h2><h3 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h3><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：</p><p>（1）至少执行一次</p><p>（2）do…while和while的判断条件是一样的</p>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩顺平Java视频学习day3</title>
      <link href="/2024/04/19/%E9%9F%A9%E9%A1%BA%E5%B9%B3Java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day3/"/>
      <url>/2024/04/19/%E9%9F%A9%E9%A1%BA%E5%B9%B3Java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day3/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="字符码表"><a href="#字符码表" class="headerlink" title="字符码表"></a>字符码表</h2><p>（1）ASCII码：1个字节表示128个字符（ASCII码扩展能表示256个字符）</p><p>（2）Unicode码：固定大小的编码，2个字节表示65536个字符，其中字母和汉字等统一占2个字节（Unicode码兼容ASCII码）</p><p>（3）UTF-8：是互联网上使用最广的Unicode的实现方式，大小可变的编码，使用1-4个字节表示一个符号，字母使用1个字节，拉丁文使用2字节，汉字使用3个字节</p><p>（4）GBK：可以表示汉字，且范围广，字母使用1个字节，汉字使用2个字节</p><p>（5）BB2312：可以表示汉字，表示范围小于gbk</p><p>（6）BIG5码：繁体中文</p><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：Java使用Unicode字符集，并设计<code>char</code>为固定的16位宽（即2个字节）。这使得每个<code>char</code>可以表示65536个不同的字符，足以覆盖大多数字符集，包括基本的多语种平面（BMP）中的字符。而c++中<code>char</code>占一个字节，只能表示256个字符，即只能表示ASCII码（扩展）</p><h2 id="基本数据类型转换"><a href="#基本数据类型转换" class="headerlink" title="基本数据类型转换"></a>基本数据类型转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换   "></a>自动类型转换   <img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3Java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day3/image-20240419151454790.png" alt="image-20240419151454790"></h3><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：</p><p>（1）Java中float占用4个字节，long占用8个字节，但实际上float的表示范围比long大。因为float存储方式是符号位、指数位和尾数位，其中指数位占8bit，所以float范围是-2^127<del>2^127。而long的范围是-2^63</del>2^63-1，所以float表示范围比long大，但是显然精度会下降，因为float精度最多为23+1（二进制），而long精度最多为64</p><p>（2）多种类型的数据混合运算时，系统自动将所有数据转换成容量最大的数据类型再计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">float</span> <span class="variable">d1</span> <span class="operator">=</span> n1 + <span class="number">1.1</span>;<span class="comment">// 错误，1.1是double型，计算完后右边是double型，而左边是float型</span></span><br><span class="line"><span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> n1 + <span class="number">1.1</span>;<span class="comment">// 正确</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">12</span>;</span><br><span class="line">s = s - <span class="number">9</span>;<span class="comment">//错误，int不能转为short</span></span><br></pre></td></tr></table></figure><p>（3）（byte，short）和char之间不会自动转换，但是它们三者可以计算（单独或混合运算），计算时首先转为int型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> b1;<span class="comment">// 错误，byte不能自动转为char</span></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s2</span> <span class="operator">=</span> b2 + s1;<span class="comment">// 错误，int不能转为short</span></span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> b2 + s1;<span class="comment">// 正确</span></span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> b1 + b2;<span class="comment">//错误，int不能转为byte</span></span><br></pre></td></tr></table></figure><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3Java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day3/image-20240419160528298.png" alt="image-20240419160528298"></p><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：</p><p>（1）强转符号只针对最近的操作数有效</p><p>（2）char类型可以保存int常量值。但不能保存int变量值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="number">100</span>;<span class="comment">// 正确</span></span><br><span class="line"><span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">100</span>;<span class="comment">// 正确</span></span><br><span class="line"><span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> m;<span class="comment">// 错误</span></span><br><span class="line"><span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> (<span class="type">char</span>)m;<span class="comment">// 正确</span></span><br></pre></td></tr></table></figure><h3 id="基本数据类型和String类型的转换"><a href="#基本数据类型和String类型的转换" class="headerlink" title="基本数据类型和String类型的转换"></a>基本数据类型和String类型的转换</h3><p>（1）基本数据类型-&gt;String</p><p>“+”如果有一边为字符串时则做拼接运算得到新的字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> b1 + <span class="string">&quot;&quot;</span>;<span class="comment">// 结果为true</span></span><br></pre></td></tr></table></figure><p>（2）String-&gt;基本数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> Integer.parseInt(s);</span><br><span class="line">System.out.println(num);</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;12.3&quot;</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">num</span> <span class="operator">=</span> Double.parseDouble(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">// String-&gt;char，取字符串第一个字符</span></span><br><span class="line">System.out.println(s.charAt(<span class="number">0</span>));</span><br></pre></td></tr></table></figure><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p>（1）左操作数 % 右操作数，结果的正负只与左操作数的正负有关</p><p>（2）自增、自减使用到了临时变量，且进行强制类型转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">i = i++;</span><br><span class="line">System.out.println(i);<span class="comment">// 结果为1，tmp = i; i = i + 1; i = tmp;而不是i = i; i = i + 1;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">i = ++i;</span><br><span class="line">System.out.println(i);<span class="comment">// 结果为2，i = i + 1; tmp = i; i = tmp;</span></span><br><span class="line"></span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">b++; <span class="comment">// 等价 b = (byte)(b + 1);</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩顺平java视频学习day2</title>
      <link href="/2024/04/18/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day2/"/>
      <url>/2024/04/18/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day2/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="加号的使用"><a href="#加号的使用" class="headerlink" title="加号的使用"></a>加号的使用</h2><p>（1）“+”左右两边都是数值型进行加法运算，如果有一边为字符串时则做拼接运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;a&quot;</span> + <span class="number">10</span>);<span class="comment">// 结果是a10</span></span><br><span class="line">System.out.println(<span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>);<span class="comment">// 结果是97+10=107，&#x27;a&#x27;转为int计算，结果为int</span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p> （1）数据类型分为基本数据类型和引用数据类型（类class、接口interface和数组[]）</p><p>（2）Java的整数类型有固定的范围和字段长度，不受具体os的影响以保证Java程序的可移植性。而C++的整数类型大小取决于编译器实现和运行的操作系统</p><p>（3）Java的整型常量默认为int型，声明long型常量须后加’ L’，浮点型常量默认为double型，声明float型常量须后加’f’或’F’</p><p> （4）注意下面的问题：8.1不能精准的用二进制表示（整数都可以精准表示，小数不行）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">double</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">2.7</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">8.1</span> / <span class="number">3</span>;<span class="comment">// 等于2.69999999...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;不要在运算结果为小数情况下进行比较，而应该以两个数的差值的绝对值在某个精度范围内作为判断&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (Math.abs(num1 - num2) &lt; 0.000001)&#123;</span><br><span class="line">System.out.println(&quot;相等&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（5）注意下面两种情况的区别</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.<span class="built_in">println</span>(<span class="string">&#x27;b&#x27;</span> + <span class="number">1</span>);<span class="comment">// 结果是99</span></span><br><span class="line"><span class="type">char</span> x = <span class="string">&#x27;b&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">System.out.<span class="built_in">println</span>(x);<span class="comment">// 结果是c</span></span><br></pre></td></tr></table></figure><p>（6）Java中不可以用0或非0的整数代替false或true，虽然C中可以</p><p>（7）将一个具体值赋给变量时先判断其范围，但是将一个变量赋给另一个变量时要注意是否能自动类型转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">// 正确，10在-128~127中，故可以赋值</span></span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> b;<span class="comment">// 错误，byte不能自动转换成c</span></span><br></pre></td></tr></table></figure><h2 id="Java类的组织形式"><a href="#Java类的组织形式" class="headerlink" title="Java类的组织形式"></a>Java类的组织形式</h2><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day2/image-20240418213516742.png" alt="image-20240418213516742"></p><p>Java API在线文档：<a href="https://www.matools.com/api">https://www.matools.com/api</a></p><h3 id="如何检索指定类"><a href="#如何检索指定类" class="headerlink" title="如何检索指定类"></a>如何检索指定类</h3><p>（1）包-&gt;类-&gt;方法</p><p>（2）直接索引，如搜Math</p>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开发手册学习</title>
      <link href="/2024/04/17/Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/17/Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="编程规约"><a href="#编程规约" class="headerlink" title="编程规约"></a>编程规约</h1><h2 id="命名风格"><a href="#命名风格" class="headerlink" title="命名风格"></a>命名风格</h2><p>（1）包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，类名如果有复数含义可以使用复数形式：应用工具类包名com.alibaba.ai.util、类名为MessageUtils</p><p>（2）类名、接口名使用大驼峰命名法：MarcoPolo、UserDO</p><p>（3）方法名、参数名、变量名统一使用小驼峰法：localValue、getHttpMessage()、inputUserId</p><p>（4）常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长：MAX_STOCK_COUNT</p><p>（5）抽象类命名使用Abstract或Base开头；异常类命名使用Exception结尾；测试类命名以它要测试的类名开始，以Test结尾</p><p>（6）接口类中的方法和属性不要加任何修饰符号（public也不要加），保持代码简洁性，并加上有效的Javadoc注释。尽量不要在接口里定义变量，如果一定要定义变量肯定是与接口方法相关，并且是整个应用的基础常量：接口方法名void commit();接口基础常量String COMPANY &#x3D; “alibaba”;</p><p>（7）类型域中括号紧挨相连表示数组：int[] arrayDemo;</p><h2 id="常量定义"><a href="#常量定义" class="headerlink" title="常量定义"></a>常量定义</h2><p>（1）在long或者Long赋值时，数值后使用大写L（小写l容易和1混淆）：Long a &#x3D; 2L；</p><p>（2）不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护：缓存相关常量放在类CacheConsts下；系统配置相关常量放在类ConfigConsts下</p><h2 id="代码格式"><a href="#代码格式" class="headerlink" title="代码格式"></a>代码格式</h2><p>（1）如果大括号内为空，则简洁写成{}不需要还寒；如果是非空代码块：左大括号前不换行。 左大括号后换行。 3） 右大括号前换行。 右大括号后还有 else 等代码则不换行 表示终止的右大括号后必须换行</p><p>（2）左大括号前需要空格</p><p>（3）左小括号与字符之间不需要空格</p><p>（4）if&#x2F;for&#x2F;while&#x2F;switch&#x2F;do等保留字与括号之间必须加空格</p><p>（5）任何二目、三目运算符左右两边需加空格，如&#x3D;、&amp;&amp;、加减乘除等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缩进 4 个空格</span></span><br><span class="line"></span><br><span class="line">  <span class="type">String</span> <span class="variable">say</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运算符的左右必须有一个空格</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关键词 if 与括号之间必须有一个空格，括号内的 f 与左括号，0 与右括号不需要空格</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(say);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左大括号前加空格且不换行；左大括号后换行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;world&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 右大括号前换行，右大括号后有 else，不用换行</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在右大括号后直接结束，则必须换行</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（4）单行字数限制不超过120个，超出需换行，遵循如下原则：第二行相对第一行缩进4个空格，从第三行开始不再缩进；运算符与下文一起换行；方法调用的点符号与下文一起换行；方法调用中的多个参数需要换行时，在逗号后进行；在左括号后换行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">StringBuffer sb = new StringBuffer();</span><br><span class="line"></span><br><span class="line">// 超过 120 个字符的情况下，换行缩进 4 个空格，点号和方法名称一起换行</span><br><span class="line">sb.append(&quot;zi&quot;).append(&quot;xin&quot;)...</span><br><span class="line">.append(&quot;huang&quot;)...</span><br><span class="line">.append(&quot;huang&quot;)...</span><br><span class="line">.append(&quot;huang&quot;);</span><br></pre></td></tr></table></figure><p>（5）不同逻辑、不同语义、不同业务之间的代码之间插入一个空行分隔开以提高可读性，没必要插入多个空行</p><p>（6）注释的双斜线与注释内容之间有且仅有一个空格。类、方法的注视要以javadoc的方式来写</p>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime的一些小技巧</title>
      <link href="/2024/04/17/Sublime%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2024/04/17/Sublime%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p>（1）cmd+&#x2F;：快速注释</p><p>（2）cmd+shift+d：复制光标所在行</p><p>（3）cmd+x：删除当前行</p>]]></content>
      
      
      <categories>
          
          <category> Triks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩顺平java视频学习day1</title>
      <link href="/2024/04/17/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day1/"/>
      <url>/2024/04/17/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day1/</url>
      
        <content type="html"><![CDATA[<h1 id="Java重点知识"><a href="#Java重点知识" class="headerlink" title="Java重点知识"></a>Java重点知识</h1><h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p>Java概述：Java的运行机制、JDK、Java开发规范</p><p>变量：数据类型</p><p>运算符：二进制</p><p>控制结构：循环</p><p>数组、排序和查找：数组</p><p>面向对象编程（基础）：成员方法及其传参机制、构造器</p><p>面向对象编程（中级）：封装、继承、多态</p><h2 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h2><p>面向对象（高级）：类变量和类方法、接口、内部类</p><p>Exception：异常体系图、异常处理</p><p>常用类：String、StringBuffer、StringBuilder</p><p>集合：集合框架体系、Collection-List（ArrayList、Vector）、Collection-Set（HashSet）、Map（HashMap）</p><p>泛型：自定义泛型</p><p>线程（基础）：线程使用</p><p>IO流：输入流、输出流</p><h2 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h2><p>网络编程：TCP编程</p><p>反射：反射获取类的结构信息</p><p>Mysql（基础）：Mysql数据类型、CRUD、函数、外连接、索引</p><p>JDBC和连接池：JDBC API、事务、连接池（Druid最重要）、DAO增删改查-BasicDao</p><p>正则表达式（非常实用）：三个常用类、分组捕获反向引用</p><p>Java8新特性：Lambda、函数式接口、stream API</p><p>Java11新特性（含Java9、Java10）：类型推断、集合增强API</p><h1 id="Java概述"><a href="#Java概述" class="headerlink" title="Java概述"></a>Java概述</h1><h2 id="Java特点"><a href="#Java特点" class="headerlink" title="Java特点"></a>Java特点</h2><p>（1）面向对象oop（object-oriented programming）</p><p>（2）健壮。强类型机制、异常处理、垃圾多自动收集是其健壮性的重要保证</p><p>（3）跨平台</p><p>（4）解释型</p><h2 id="JVM、JDK和JRE"><a href="#JVM、JDK和JRE" class="headerlink" title="JVM、JDK和JRE"></a>JVM、JDK和JRE</h2><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><p>Java虚拟机（Java Virtual Machine）。是一个虚拟的计算机，包含在&#x3D;&#x3D;JDK&#x3D;&#x3D;中。它由一套字节码指令集、一组寄存器、一个栈、一个垃圾回收堆等组成。该机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”</p><p><img src="/../../../../source/images/%E9%9F%A9%E9%A1%BA%E5%B9%B3java%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0day1/image-20240417104314211.png" alt="image-20240417104314211"></p><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3><p>Java开发工具包（Java Development Kit），JDK &#x3D; JRE + Java的开发工具（java、javac、javadoc、javap等）。如果需要开发Java程序，需要安装JDK（需要开发工具来编译.java文件）</p><h3 id="JRE"><a href="#JRE" class="headerlink" title="JRE"></a>JRE</h3><p>Java运行环境（Java Runtime Environment），JRE &#x3D; JVM + Java的核心类库。如果想要运行一个开发好的Java程序，只需安装JRE（如果只想运行开发好的.class文件只需要用JVM+核心类库）</p><h3 id="macOS中如何查看JDK和JRE"><a href="#macOS中如何查看JDK和JRE" class="headerlink" title="macOS中如何查看JDK和JRE"></a>macOS中如何查看JDK和JRE</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/libexec/java_home -V</span><br></pre></td></tr></table></figure><p>可以得到如下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Matching Java Virtual Machines (2):</span><br><span class="line">    1.8.291.10 (x86_64) &quot;Oracle Corporation&quot; - &quot;Java&quot; /Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home</span><br><span class="line">    1.8.0_291 (x86_64) &quot;Oracle Corporation&quot; - &quot;Java SE 8&quot; /Library/Java/JavaVirtualMachines/jdk1.8.0_291.jdk/Contents/Home</span><br><span class="line">/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home</span><br></pre></td></tr></table></figure><p>“Internet Plug-Ins”路径指向Java Applet插件的JRE安装（主要是支持浏览器中运行的Java Applets），发现里面有java指令</p><p>“Java”路径指向一个完整的JDK安装，其中包括JRE</p><p>&#x3D;&#x3D;注&#x3D;&#x3D;：JRE和JDK中都有java指令，但只有JDK中有javac指令</p><h2 id="macOS下Java的版本管理"><a href="#macOS下Java的版本管理" class="headerlink" title="macOS下Java的版本管理"></a>macOS下Java的版本管理</h2><h3 id="多版本的JDK"><a href="#多版本的JDK" class="headerlink" title="多版本的JDK"></a>多版本的JDK</h3><p>（1）已经安装了Java 8，接下来安装Java 11</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.oracle.com/java/technologies/downloads/#java11-mac</span><br></pre></td></tr></table></figure><p>选择x86的（arm是M1芯片）</p><p>（2）查看所有的JDK</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/libexec/java_home -V</span><br><span class="line">/usr/libexec/java_home -v 11 #查看Java11的路径</span><br></pre></td></tr></table></figure><p>（3）在~&#x2F;.zshrc中设置默认的JDK版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 设置默认Java版本（输入jdk8时切换成Java8，输入jdk11时切换成JDK11）</span><br><span class="line">export JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_291.jdk/Contents/Home</span><br><span class="line">export JAVA_11_HOME=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home</span><br><span class="line">export JAVA_HOME=`/usr/libexec/java_home`</span><br><span class="line">alias jdk8=&quot;export JAVA_HOME=$JAVA_8_HOME&quot;</span><br><span class="line">alias jdk11=&quot;export JAVA_HOME=$JAVA_11_HOME&quot;</span><br><span class="line">export PATH=&quot;JAVA_HOME/bin:$PATH&quot;</span><br></pre></td></tr></table></figure><p>（4）参考文献</p><p><a href="https://blog.csdn.net/u014163312/article/details/123297401">https://blog.csdn.net/u014163312/article/details/123297401</a></p><h3 id="IDEA下的多版本JDK"><a href="#IDEA下的多版本JDK" class="headerlink" title="IDEA下的多版本JDK"></a>IDEA下的多版本JDK</h3><p>（1）cmd+；打开项目结构</p><p>（2）选择不同的SDK（Software Development Kit，可以是任何的开发工具集，包括JDK）</p><h2 id="Java快速入门"><a href="#Java快速入门" class="headerlink" title="Java快速入门"></a>Java快速入门</h2><h3 id="macOS下使用Sublime编写Java文件"><a href="#macOS下使用Sublime编写Java文件" class="headerlink" title="macOS下使用Sublime编写Java文件"></a>macOS下使用Sublime编写Java文件</h3><h4 id="macOS下快速打开Java程序并执行"><a href="#macOS下快速打开Java程序并执行" class="headerlink" title="macOS下快速打开Java程序并执行"></a>macOS下快速打开Java程序并执行</h4><p>（1）cmd+空格然后输入java找到对应文件夹</p><p>（2）右键-服务-New iterm2 Window Here</p><p>（3）在iterm中用sublime打开对应文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open -a open -a Sublime\ Text Hello.java</span><br></pre></td></tr></table></figure><p>或者右键-显示简介在打开方式中修改默认设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open Hello.java</span><br></pre></td></tr></table></figure><p>（4）执行Java程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac Hello.java</span><br><span class="line">java Hello</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;注&#x3D;&#x3D;：</p><p>（1）如果在iterm输入“javac Hello.java”后出现以下错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">                                             Hello.java:2: 错误: 编码 UTF-8 的不可映射字符 (0xBD)</span><br><span class="line">public static void main(String[] args)&#123;//��ʾһ��������</span><br><span class="line">                                                  ^</span><br><span class="line">Hello.java:2: 错误: 编码 UTF-8 的不可映射字符 (0xB7)</span><br><span class="line">public static void main(String[] args)&#123;//��ʾһ��������</span><br></pre></td></tr></table></figure><p>在Sumbline中File-Save with Encoding中选择UTF-8（因为iterm默认用UTF-8编码）</p><p>（2）为什么不是“java Hello.class”而是”java Hello”：其实这里的Hello是指Java程序中的Hello主类，如果是Hello.class，则会尝试去找一个叫Hello.class的类。即java后面指定的是类名而非类文件名</p><h3 id="Java的运行机制"><a href="#Java的运行机制" class="headerlink" title="Java的运行机制"></a>Java的运行机制</h3><p>（1）编译（javac指令：将.java文件编译成.class文件）</p><p>开发者使用Java编写源代码Test.java，再通过Java编译器编译成Java字节码Test.class（字节码是一种中间形式的代码，与任何特定的硬件或os都无关）</p><p>（2）运行（java指令：将.class文件装载到对应的JVM执行）</p><p>字节码不是任何传统意义上的机器代码，需要一个运行环境即JVM来执行，不同的os有各自的JVM。当在os上执行Java程序时，JVM将字节码转换成对应os可理解的机器指令执行</p><h3 id="Java开发注意事项和细节说明"><a href="#Java开发注意事项和细节说明" class="headerlink" title="Java开发注意事项和细节说明"></a>Java开发注意事项和细节说明</h3><p>（1）Java源文件的基本组成部分是类，如Hello类，每个类都对应一个.class文件。一个源文件中最多只能有一个public类，文件名必须以该类名命名。</p><p>（2）Java应用程序的执行入口是main()方法，它有固定的书写格式。main方法也可以写在非public类中，然后指定运行非public类。如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span>&#123;<span class="comment">//Hello是一个共有的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;<span class="comment">//表示一个主方法</span></span><br><span class="line">System.out.println(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;<span class="comment">//表示一个主方法</span></span><br><span class="line">System.out.println(<span class="string">&quot;hello,dog!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;<span class="comment">//表示一个主方法</span></span><br><span class="line">System.out.println(<span class="string">&quot;hello,cat!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javac Hello.java</span><br><span class="line">java Hello</span><br><span class="line">java Dog</span><br><span class="line">java Cat</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h4><p>注释内容可以被JDK提供的工具javadoc解析，生成一套以网页文件形式体现的程序的说明文档，一般写在类中</p><h5 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author Yevette</span><br><span class="line"> * @version 1.0</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h5 id="生成对应的文档注释"><a href="#生成对应的文档注释" class="headerlink" title="生成对应的文档注释"></a>生成对应的文档注释</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javadoc -d 文件夹名 -author -version Hello.java</span><br></pre></td></tr></table></figure><h5 id="javadoc标签"><a href="#javadoc标签" class="headerlink" title="javadoc标签"></a>javadoc标签</h5><p>如@author、@version、@param等</p>]]></content>
      
      
      <categories>
          
          <category> Internship </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何卸载并重装hexo</title>
      <link href="/2024/04/16/%E5%A6%82%E4%BD%95%E5%8D%B8%E8%BD%BD%E5%B9%B6%E9%87%8D%E8%A3%85hexo/"/>
      <url>/2024/04/16/%E5%A6%82%E4%BD%95%E5%8D%B8%E8%BD%BD%E5%B9%B6%E9%87%8D%E8%A3%85hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="重装npm和node-js"><a href="#重装npm和node-js" class="headerlink" title="重装npm和node.js"></a>重装npm和node.js</h2><h3 id="卸载nmp"><a href="#卸载nmp" class="headerlink" title="卸载nmp"></a>卸载nmp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm uninstall npm -g</span><br></pre></td></tr></table></figure><p>如果不能卸载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/lib/node_modules</span><br></pre></td></tr></table></figure><p>然后删除npm文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmp -v</span><br></pre></td></tr></table></figure><p>测试一下，如果not found则卸载成功</p><h3 id="卸载node-js"><a href="#卸载node-js" class="headerlink" title="卸载node.js"></a>卸载node.js</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/local/lib/node /usr/local/lib/node_modules /var/db/receipts/org.nodejs.*</span><br><span class="line"></span><br><span class="line">sudo rm -rf /usr/local/include/node /Users/$USER/.npm</span><br><span class="line"></span><br><span class="line">sudo rm /usr/local/bin/node</span><br><span class="line"></span><br><span class="line">sudo rm /usr/local/share/man/man1/node.1</span><br><span class="line"></span><br><span class="line">sudo rm /usr/local/lib/dtrace/node.d</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>测试一下，如果not found则卸载成功</p><h3 id="重装npm和node-js-1"><a href="#重装npm和node-js-1" class="headerlink" title="重装npm和node.js"></a>重装npm和node.js</h3><p>官网重新下载</p><p><a href="https://nodejs.org/en/download/current/">https://nodejs.org/en/download/current/</a></p><p>npm 默认会放到 <code>/usr/lib/node_modules</code> 目录下，普通用户没有权限也不建议修改权限或使用 sudo，所以可以添加环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line">export PATH=&quot;/usr/local/bin:$PATH&quot;</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="重装hexo"><a href="#重装hexo" class="headerlink" title="重装hexo"></a>重装hexo</h2><h3 id="卸载hexo"><a href="#卸载hexo" class="headerlink" title="卸载hexo"></a>卸载hexo</h3><p>将原先网站文件夹的内容备份后删除该文件夹（主要是source、themes、scaffolds、_config.yml）</p><h3 id="重装hexo-1"><a href="#重装hexo-1" class="headerlink" title="重装hexo"></a>重装hexo</h3><p>（1）先用nmp安装hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>注：如果超时可以将npm镜像站换成国内的，如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>（2）新建网站文件夹blog</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>（3）部署到网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>_config.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/xx/xx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="部分功能添加"><a href="#部分功能添加" class="headerlink" title="部分功能添加"></a>部分功能添加</h2><h3 id="安装NexT主题"><a href="#安装NexT主题" class="headerlink" title="安装NexT主题"></a>安装NexT主题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>然后在_config.yml中设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>注：如果要设置不同的外观，可以去blog&#x2F;themes&#x2F;next下的_config.yml中设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><h3 id="生成tag和categories目录页"><a href="#生成tag和categories目录页" class="headerlink" title="生成tag和categories目录页"></a>生成tag和categories目录页</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>然后在source&#x2F;tag&#x2F;index.md中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>顺便修改title</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br></pre></td></tr></table></figure><p>在source&#x2F;categories&#x2F;index.md中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>顺便修改title</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br></pre></td></tr></table></figure><h3 id="博文中添加tag和categories"><a href="#博文中添加tag和categories" class="headerlink" title="博文中添加tag和categories"></a>博文中添加tag和categories</h3><p>在scaffolds&#x2F;post.md中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">categories:</span><br></pre></td></tr></table></figure><h3 id="字数和阅读时长显示"><a href="#字数和阅读时长显示" class="headerlink" title="字数和阅读时长显示"></a>字数和阅读时长显示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>在themes&#x2F;_config.yml中搜索Post wordcount display settings，然后这一块改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class="line"># 字数显示配置 需要安装 npm i --save hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true         # 单篇 字数统计</span><br><span class="line">  min2read: true          # 单篇 阅读时长</span><br><span class="line">  totalcount: false       # 网站 字数统计</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><h3 id="社区侧边栏链接配置"><a href="#社区侧边栏链接配置" class="headerlink" title="社区侧边栏链接配置"></a>社区侧边栏链接配置</h3><p>themes&#x2F;_config.yml中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 社区侧边栏链接配置</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/xx || fab fa-github</span><br><span class="line">  E-Mail: mailto:xx@gmail.com || fa fa-envelope</span><br></pre></td></tr></table></figure><h3 id="不显示全文"><a href="#不显示全文" class="headerlink" title="不显示全文"></a>不显示全文</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure><h2 id="其他功能添加"><a href="#其他功能添加" class="headerlink" title="其他功能添加"></a>其他功能添加</h2><p>（1）添加站内搜索功能：<a href="https://blog.csdn.net/wangqingchuan92/article/details/111546625">https://blog.csdn.net/wangqingchuan92/article/details/111546625</a></p><p>（2）设置菜单：<a href="https://theme-next.iissnan.com/getting-started.html#menu-settings">https://theme-next.iissnan.com/getting-started.html#menu-settings</a></p><p>（3）新老版本：<a href="https://blog.csdn.net/Sky_True/article/details/104435997/">https://blog.csdn.net/Sky_True/article/details/104435997/</a></p><p>（4）实现搜索引擎搜索：<a href="https://www.cnblogs.com/shwee/p/11421156.html">https://www.cnblogs.com/shwee/p/11421156.html</a></p><h2 id="config-yml文件的配置"><a href="#config-yml文件的配置" class="headerlink" title="_config.yml文件的配置"></a>_config.yml文件的配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site修改</span><br><span class="line">title: xx&#x27;s Blog</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">author: xx</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: https://xx.github.io#修改</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :year/:month/:title.md # 修改，可以加入/:day/</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link:</span><br><span class="line">  enable: true # Open external links in new tab</span><br><span class="line">  field: site # Apply to the whole site</span><br><span class="line">  exclude: &#x27;&#x27;</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">syntax_highlighter: highlight.js</span><br><span class="line">highlight:</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace: &#x27;&#x27;</span><br><span class="line">  wrap: true</span><br><span class="line">  hljs: false</span><br><span class="line">prismjs:</span><br><span class="line">  preprocess: true</span><br><span class="line">  line_number: true</span><br><span class="line">  tab_replace: &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Metadata elements</span><br><span class="line">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span><br><span class="line">meta_generator: true</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span><br><span class="line">updated_option: &#x27;mtime&#x27;</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Include / Exclude file(s)</span><br><span class="line">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"># Deployment修改</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/xx/xx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>（1）md文档编写时，##后要空一格，如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### test</span><br></pre></td></tr></table></figure><p>（2）新建名字带空格的md文件，如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;cpp primer第5版阅读笔记&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Solutions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
